<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <artifactId>grinder</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>net.grinder</groupId>
    <artifactId>grinder-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>net.grinder</groupId>
      <artifactId>grinder-dcr-agent</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>net.grinder</groupId>
      <artifactId>grinder-httpclient</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>net.grinder</groupId>
      <artifactId>grinder-xmlbeans</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
    </dependency>

    <dependency>
      <groupId>net.sf.jedit-syntax</groupId>
      <artifactId>jedit-syntax</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jsr166-mirror</groupId>
      <artifactId>extra166y</artifactId>
      <scope>provided</scope> <!-- Because we shade into our jar. -->
    </dependency>

    <dependency>
      <groupId>org.picocontainer</groupId>
      <artifactId>picocontainer</artifactId>
    </dependency>

    <dependency>
      <groupId>org.python</groupId>
      <artifactId>jython</artifactId>
    </dependency>

    <!-- grinder-xmlbeans only exports these at compile time, we change their
      scope to make them available at runtime and to set our manifest classpath
      correctly. -->
    <dependency>
      <groupId>javax.xml</groupId>
      <artifactId>jsr173</artifactId>
    </dependency>

    <dependency>
      <groupId>xmlbeans</groupId>
      <artifactId>xbean</artifactId>
      <version>2.1.0</version>
    </dependency>

    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojure</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>net.grinder</groupId>
                  <artifactId>grinder-dcr-agent</artifactId>
                  <version>1.0-SNAPSHOT</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>

                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>grinder-dcr-agent.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-javaagent:${project.build.directory}/grinder-dcr-agent.jar
            -XX:MaxPermSize=256m</argLine>
          <systemPropertyVariables>

            <!-- Put Jython droppings in one place. -->
            <python.cachedir>${project.basedir}/target/python.cache</python.cachedir>

            <!-- Alternative Jython implementations for unit tests. If you don't
              have these, comment out the property. -->
            <jython2_1.dir>/opt/jython/jython-2.1</jython2_1.dir>
            <jython2_5_0.dir>/opt/jython/jython2.5.0</jython2_5_0.dir>
            <jython2_5_1.dir>/opt/jython/jython2.5.1</jython2_5_1.dir>
            <jython2_5_2.dir>/opt/jython/jython2.5.2</jython2_5_2.dir>
          </systemPropertyVariables>

          <excludes>
            <!-- Skipping due to "Duplicated LocalVariableTable" issue that only
              occurs when run by surefire, in a group of tests. -->
            <exclude>**/TestTraditionalJythonInstrumenterWithJython21.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <index>true</index>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addClasspath>true</addClasspath>
            </manifest>

            <manifest-entries>
              <!-- Add jython.jar up front, so uses cane continue to override by
                dropping a new version into the lib directory. -->
              <Class-Path>jython.jar</Class-Path>
            </manifest-entries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.5</version>
        <configuration>
          <filters>
            <filter>
              <artifact>org.codehaus.jsr166-mirror:extra166y</artifact>
              <includes>
                <include>**/CustomConcurrentHashMap.class</include>
              </includes>
            </filter>
          </filters>
          <artifactSet>
            <includes>
              <include>org.codehaus.jsr166-mirror:extra166y</include>
            </includes>
          </artifactSet>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>copy</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
