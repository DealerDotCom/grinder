Grinder 2.8.4
-------------

   Unified HTTP/HTTPS proxy.

   Allow spaces in grinder.properies file names and host names.

   Documentation on The Grinder vs LoadRunner courtesy of Tom
   Braverman.

   Spanish translation of the console from Jose Antonio Zapata Rey.


Grinder 2.8.3
-------------

   String beans can now implement an interface that allows them to
   access the HTTPClient HTTPResponse object. This means that
   StringBeans can perform assertions on the HTTP response, and snarf
   data from that response for use in subsequent requests.

   The HTTP plugin is now relaxed when it finds a partial string bean
   tag, it just outputs the literal text. This allows string bean tags
   to be used within XML POST data.

   Fix sleepTimeVariation documentation. Thanks to Mika Laitio for the
   report.

   Allow query strings to be passed with POSTs. Thanks to Kjetil JD
   for the fix.

   The TCP Sniffer parameters for passing keystore information have
   changed, see doc/TCPSniffer.txt.

   I've removed the TCP Sniffer URL rewriting filter; use -proxy
   instead.

   All of the TCP Sniffer engines have been reworked. This SSL proxy
   engine is more efficient when making multiple requests. The TCP
   Sniffer -proxy mode can now be used with any filter. The TCP
   Sniffer should no longer spin CPU when idle.

   Reworked HttpPluginSnifferFilter:
	- Outputs a full usable test script.
	- Copes with POST data split across TCP packets.
	- Fixed bug where POST with multiple lines was read incorrectly,
	  this required moving to Jakarta ORO because Jakarta Regexp
	  bombed with a trivial regexp.
	- Removed multipart form handling.
	- Records 401 (authentication) exchanges.

   (A note is necessary on the multipart form handling. The more I
   looked at the existing support in the sniffer, the more dubious it
   looked. Here's what the HTTP specification says on the subject:

	"In general, HTTP treats a multipart message-body no
	differently than any other media type: strictly as payload.
	The one exception is the "multipart/byteranges" type ..."

   This means that the sniffer should just chuck the data directly
   into the POST file, which is what it now does. And no Cynthia, we
   do not support multipart/byteranges.)

   Support for disabling persistent connections with the HTTPClient
   plugin courtesy of Todd Wasson.

   Other miscellaneous fixes and documentation.


Grinder 2.8.2
-------------

   The Grinder is now released under a BSD style license.

   New UI showing worker process status from Dirk Feufel.

   Fix console communication bug where socket reader threads would
   sleep each time a dead socket handle was polled.

   Fix SocketPlugin bug where multiple request files were incorrectly
   handled. Thanks to Hussein Badakhchani for the report.


Grinder 2.8.1
-------------

   Communication from the worker processes to the Console now uses a
   unicast TCP connection. Multicast has been used here since the
   beginning (it was cheap and cheerful to implement) but caused
   several problems:
	- Under heavy load, multicast packets are lost.
	- I've had a report of multicast packets being duplicated.

   Clearly neither of these are good for statistics reporting. Signals
   from the Console to the worker processes still use multicast.

   IMPORTANT: The communication properties have changed, you must set
   the following in grinder.properties:

	grinder.consoleAddress	(Address of machine running Console)
	grinder.consolePort
	grinder.grinderAddress	(Multicast address)
	grinder.grinderPort

   [grinder.consoleAddress is a new property. grinder.multicastAddress
   and grinder.multicastPort have been renamed to
   grinder.grinderAddress and grinder.grinderPort.]

   You should make the corresponding changes in the Console options
   dialog. Please refer to the README file for more details.

   Fix the data file title line.

   Reinstate the hack to prevent the HTTPClient from sending HTTP
   trailers. Say -DHTTPClient.disableTrailers=true in your
   grinder.jvm.arguments.


Grinder 2.8
-----------

   New heavy iron statistics engine. Allows plugins to dynamically
   add new statistics and derived statistic views.

   As an example, I've used the new statistic engine to implement an
   additional "mean time to first byte" for the HttpURLConnection
   implementation of the HTTPPlugin. This replaces the old
   "timeIncludesTransaction" parameter. Support for HTTPClient is
   more involved and is slated for a future release.

   Console "about" dialog.


Grinder 2.7.2
-------------

   Console enhancements:
    - Console no longer reads grinder.properties:
    - New options dialog to set communication details.
    - Console responds dynamically new tests registered by Grinder
      processes.
    - Can no longer set ignore samples to 0, doing this used to cause
      incorrect triggering.
    - Colour coded state label.

   Miscellaneous engine enhancements:
    - Sleeping processes can now be interrupted by the Console, so
      they respond more quickly.
    - Logging tweaks.
    - Add dropped message detection to the communications.

   HTTPPlugin enhancements:
    - Filenames of result pages now contain test description.

   More changes to the plugin API:
    - A better fix for non-contiguous test numbers that doesn't
      pollute the Test interface.
    - Coallese processID and hostID into a single grinderID.
    - Much repackaging and rationalisation. Plugins should only need
      to use the "common" and "plugininterface" packages.


Grinder 2.7.1
-------------

   Fix bug with non-contiguous test numbers.

   Fix basic authentication bug.


Grinder 2.7
-------------

  Console enhancements:
   - All text is now read from Console.properties (think I18N).
   - Highlight errors labels if errors > 0.
   - Table view now has average TPS and peak TPS.
   - Removed individual sample TPS labels.
   - New last sample statistics tab.

  Remove distinction between "abortions" and "errors" from the
  recorded statistics. All tests now result in a "successful
  transaction" or an "error".

  Removed deprecated BookHttpPlugin example. Use StringBeans instead.

  Minor changes to the plugin interface.

  New HTTP plugin sniffer filter option, -initialTest.

  HTTPPlugin enhancements
   - Can now send arbitrary headers. Note, the specific
     If-Modified-Since property has been removed, use the arbitrary
     header support. The TCPSniffer filter has been updated
     accordingly.
   - Most request strings, including the arbitrary header values, are
     now affected by the String Bean, see doc/HTTPPlugin.txt.
   - HTTPClient is now the default implementation. The
     timeIncludesTransaction parameter (which is ignored by the
     HTTPClient implementation) now defaults to true.
     HttpURLConnection support is deprecated and will be removed in a
     future release. See doc/HTTPPlugin.txt for more information,
     including notes on HTTPS support.

  Features from Kalle Burbeck:
   - HTTP plugin sniffer filter now has limited support for
     multipart forms.
   - HTTP plugin sniffer filter now generates test descriptions.

  Features from Paddy Spencer:
   - New "Sniff 'n' Grind" webapp (the management take no
     responsibility for Paddy's sense of humour).

   - Reworked HTTP proxy, added new HTTPS proxy
 
   - TCPSniffer changes:
     -timeout to set the proxy to timeout;
     -localSSLPort for use with the HTTPS proxy;
     -localHost for use with multiple local IP addresses;
     doesn't barf if you set remote host/port with proxy;


Grinder 2.6.5
-------------

  New tabbed Console layout.

  Arm/stop is now a single Console control.

  New "reset" Console control. This allows you to start a single
  Grinder process per machine and control the whole show from the
  Console.

  New Console control for the number of significant figures to
  display.

  You can now save data from console.

  HTTPClientHandler now supports multiple servers.

  Graph colour is now based on response time.

  Documentation fixes.


Grinder 2.6.4
-------------

  Fix -colour.

  Fix distribution: add HTTPClient classes to grinder.jar.

  Patch HTTP to fix handling of query strings.

  Fix: don't throw NPE when using HTTPClient to retrieve zero length
  body response.

  Make the console "ignore samples" and "collect samples" controls
  text fields rather than sliders - allows big numbers for power
  users.

  Hack a switch onto HTTPClient to disable the use of
  trailer-related headers, and use it in HTTPClientHandler. Better for
  the less well-travelled server implementations.

  Extra documentation. The changes to doc/Timing.txt are particular
  worth a scan.


Grinder 2.6.3
-------------

  New socket plugin from David Freels.

  Console summary table now uses a JTable.

  Fix to recording of short response times from Mikael Suokas.

  Thread safety fix from Mikael Suokas.

  Fix basic authentication property names. Thanks to Andrew
  Sliwkowski for reporting this.

  Added new file doc/Problems.txt to hold wisdom from Mikael Suokas.
  Split the documentation of the plugins and the TCPSniffer into
  separate files.

  The HTTP plugin now has experimental support for Ronald Tschalär's
  excellent HTTPClient library instead of HttpURLConnection.
  HTTPClient has many more features than HttpURLConnection, see
  http://www.innovation.ch/java/HTTPClient/urlcon_vs_httpclient.html
  for a comparision. I hope to lever features such as proxy support,
  connection timeouts and persistent cookies into future versions of
  The Grinder. Unfortunately experimentation shows HTTPClient
  sometimes does not perform well in a multithreaded environment. I'm
  guessing this should be straightforward to fix. See the file
  doc/HTTPPlugin.txt for details on how to turn on the HTTPClient
  support.

  The TCPSniffer echo filter now reports connection open and close
  events.

  The TCPSniffer now has a funky "-colour" option.


Grinder 2.6.2
-------------

  Added support for HTTP basic authentication. You can now use two new
  HTTP plugin test parameters, basicAuthenticationUser and
  basicAuthenticationPassword, to specify the appropriate parameters
  for each request. See README for details.

  New HTTP plugin parameter: timeIncludesTransaction. By default the
  time that the HTTP plugin reports is the time it takes for the
  remote server to accept the connection request. When using the times
  as an indicator of user experience, this is usually what you want.
  Sometimes however you are more interested in the time the entire
  HTTP transaction takes, including the time required to read the HTTP
  response over the network. If so, set this parameter to true.

  Removed property grinder.thread.beginCycleSleepTime, as its
  redundant. (Use grinder.test0.sleepTime instead).

  New property: grinder.thread.initialSleepTime. See README for
  details.

  When the property grinder.recordTime is false, the time is no longer
  logged to the data file. (The prime purpose of recordTime is to
  control whether times are _reported_ to the console, in fact times
  are always recorded. This is too subtle for some users ;-) so I've
  made this change for an easy life).

  Reworked the logging code. The visible change is improved logging of
  sub-process events to the controlling terminal.

  Changed the sense of the "-norewriteURLs" TCPSniffer option to make
  it "-rewriteURLs". Rewriting is no longer the default behaviour.


Grinder 2.6.1
-------------

  Various tweaks to the timing code. The response times reported by
  your test scripts will almost certainly be smaller and more correct
  with this version. See doc/Timing.txt for information.

  New property: grinder.recordTime. See the file doc/Timing.txt for
  details.

  New property: grinder.logProcessStreams. See README for details.

  Handle multiple Set-Cookie headers, courtesy of Christian Nedregard.


Grinder 2.6
-----------

  Console rework. Extra knobs and dials which allow the console to be
  set to capture a certain number of samples - see README for details.
  New average TPS reporting.

  You can now use the Console to request that Grinder processes exit.
  ** IMPORTANT** The property "grinder.waitForConsoleSignal" has been
  renamed to "grinder.receiveConsoleSignals".

  Cool HttpPluginSnifferFilter enhancements from Dr Paddy Spencer that
  rewrite absolute URLs on the fly. This makes creating test scripts
  for sites that use absolute URL's much less painful. The solution
  includes a new way of running the sniffer by defining it as a proxy
  to the browser. Paddy promises to document all of this RSN.

  Several bug fixes including:
   - Don't spin uselessly when not reporting to the console.
   - Don't broadcast needless cruft in the statistics report messages.
     (read: your network will no longer creak, this explains the need
      to up the buffer in 2.5).
   - Log directory is no longer mandatory.


Grinder 2.5
-----------

  The HTTP plugin now supports "string beans". These allow URL's and
  POST data to be easily parameterised.

  I've up'ed the read buffer size to 64K to allow more test statistics
  to be sent in a single multicast message. If this is too low you'll get
  exceptions - either null pointer exceptions in the Receiver or
  "can't bind to socket" exceptions in the Sender code. If any one is
  still running into problems, please mail
  grinder-use@lists.sourceforge.net.

  JRun friendly patch from Stuart Tily.

  Better socket handling for TCPSniffer from Phillip Burgess.


Grinder 2.4
-----------

  The console UI has been slightly tidied up. Graphs are now
  histograms.

  The JUnit plugin should work again. It also has a new parameter
  (logStackTraces) and improved logging.

  You can now specify an explicit properties file to both the Grinder
  and the Console as the first argument. For example:

	java net.grinder.Grinder myproperties

  Credit to Marc Stogner for this idea and initial implementaion.

  (More version musings: The last version was _meant_ to named be 2.4,
  not 2.3.2. According to my schem, increments the third number is
  meant to be reserved for bug fix releases only. The new console
  funtionallity really deserves something more significant. Rather
  than rewriting history, I'm treating 2.3.2 as a "beta" of the
  console functionality, and upping the second number here.)


Grinder 2.3.2
-------------

  A shiny new console, with true TPS measurement.

  New communciations layer.


Grinder 2.3.1
-------------

  Even more bug fixes to the HTTP plugin. The cookie handling has been
  reworked to more accurately reflect RFC 2109. Multiple cookies
  should now work, with the exception that only one Set-Cookie header
  is recognised per request. This is a limitation of the
  java.net.HttpURLConnection class, which I will rant about at length
  to anyone who asks.

  The HTTP plugin parameter 'grinder.plugin.parameter.keepSession' has
  been renamed to 'grinder.plugin.parameter.useCookies'.

  The Grinder now has a logo, courtesy of Richard Wallace.


Grinder 2.3
-----------

  A HTTP plugin bug fix release. See the ChangeLog for details.


Grinder 2.2
-----------

  The promised JUnit plugin is here! See README for more information.

  I've introduced the concept of a TestSetPlugin that defines the set
  of tests to perform. This is primarily to support the JUnit plugin.

  Bug fix to SSLSnifferEngine from Paddy Spencer. (You're first name
  doesn't _have_ to begin with 'P' to get into AUTHORS, but it helps
  :-)).

  More tweaks to the logging and terminal output.

  The Console _should_ work again. Can't verify this as multicast is
  currently not working on my machine.


Grinder 2.1
-----------

  The plugin interface now has a single "doTest" dispatch interface
  instead of using reflection. This simplifies the writing of generic
  plugins. The "grinder.methods" property has been removed. Instead
  tests are specified by a number of "grinder.testX" properties (where
  test is any number). See README for details.

  [Support for testing classes using reflection will be provided by a
  JUnit plugin which will come in 2.2].

  The "initial sleep time" has been removed, a "begin cycle sleep
  time" has been added in its place. Individual method sleep times can
  now be specified. All sleep times are now randomly varied according
  to a Normal distribution. See README for details.

  The HttpPlugin now supports an "ifModifiedSince" parameter. This
  translates to the HTTP "If-Modified-Since" request header. This
  allows the grinder to simulate the mechanism browsers use to check
  for cached pages.

  The HttpPluginSnifferFilter has been updated to record sleep times,
  If-Modified-Since headers, and reflect the property format changes.

  The logging of the HTTP plugin has been improved.

  The output and error log format is now more useful. There was no
  point in displaying the host and process for each line (each process
  gets its own output file). I've added the current cycle and test
  number instead.

  I've removed the "simple" and "ejb" plugins as they are not useful
  in their own right and I got fed up of maintaining them. Both would
  be best addressed using the planned JUnit plugin. Examples will come
  with Grinder 2.2.

  We have our first JUnit test case. We need more.

  The TCPSniffer is now silent about SocketExceptions.

  Renamed "GrinderContext" to more correct "PluginContext". Renamed
  "method" to "test" throughout.


Grinder 2.0
-----------

  "Huh - what happened to the version numbers?": This release of the
  Grinder should be published on http://developer.bea.com/ and its
  logically a "1.0" release. However, Paco's original was released as
  1.6 and I don't want to confuse the public too much as to the latest
  and greatest.


  New TCPSniffer - the SnifferServlets are dead! (Big thanks to Phil
  Dawes for the sweat behind this).


  The HTTP plugin now automatically follows redirects only if you
  set the property

	grinder.plugin.parameter.followRedirects=true

  See the README file for details.


  The build auto-detects what modules to build by checking your
  classpath for classes the module depends on. You may have to unset
  your classpath if this doesn't do what you want. Currently the
  conditionally built modules are:

   HTTP SSL plugin (Needs the JSSE)
   TCPSniffer SSL engine (Needs the JSSE)
   TCPSniffer HTTP plugin filter (Needs Apache Jakarta Regexp)
   WebLogic Server 5.1 Trader EJB plugin (needs WLS Trader EJB)


  Fixed a bug that caused the thread ID to be displayed incorrectly.


  I've added a wrapper class for the Console to the net.grinder
  package. You should now use "java net.grinder.Console" instead of
  "java net.grinder.console.Console". All future "main" classes will
  belong to this package.


Grinder 0.9
-----------

  I've finally got rid of PropsLoader. This entails a few changes to
  properties:

    grinder.jvm.path	-	Specifies the java executable used for
				the child JVMs. Defaults to "java" so
				you do not need to specify this if
				your path is sensible.

    grinder.jvm.classpath -	Use to adjust the classpath used for
				the child VMs. Anything specified here
				will be prepended to the classpath
				used to start the grinder itself.

    grinder.jvm.arguments -	Additional arguments to child JVM's.


  Additionally, grinder.properties does not have to be in your
  classpath anymore. (I know I said this before - I mean it this
  time).

  PeterZ found the data file title line useful so I've reinstated it.

  I'm now using Ant 1.2 as the build engine, and have decided to
  remove Ant from the distrubution. See the build.xml file for more
  information.


Grinder 0.8
-----------

  HTTPS support from Phil Dawes.

  HTTP 302/307 handling from Phil Dawes.
