Grinder 2.6.2
-------------

  New HTTP plugin parameter, "timeIncludesTransaction". By default the
  time that the HTTP plugin reports is the time it takes for the
  remote server to accept the connection request. When using the times
  as an indicator of user experience, this is usually what you want.
  Sometimes however you are more interested in the time the entire
  HTTP transaction takes, including the time required to read the HTTP
  response over the network. If so, set this parameter to true.

  Removed property grinder.thread.beginCycleSleepTime, as its
  redundant. (Use grinder.test0.sleepTime instead).

  New property: grinder.thread.initialSleepTime. See README for
  details.

  When the property grinder.recordTime is false, the time is no longer
  logged in the data file. (The prime purpose of recordTime is to
  control whether times are _reported_ to the console, in fact times
  are always recorded. This is too subtle for some users ;-) so I've
  made this change for an easy life).


Grinder 2.6.1
-------------

  Various tweaks to the timing code. The response times reported by
  your test scripts will almost certainly be smaller and more correct
  with this version. See doc/Timing.txt for information.

  New property: grinder.recordTime. See the file doc/Timing.txt for
  details.

  New property: grinder.logProcessStreams. See README for details.

  Handle multiple Set-Cookie headers, courtesy of Christian Nedregard.


Grinder 2.6
-----------

  Console rework. Extra knobs and dials which allow the console to be
  set to capture a certain number of samples - see README for details.
  New average TPS reporting.

  You can now use the Console to request that Grinder processes exit.
  ** IMPORTANT** The property "grinder.waitForConsoleSignal" has been
  renamed to "grinder.receiveConsoleSignals".

  Cool HttpPluginSnifferFilter enhancements from Dr Paddy Spencer that
  rewrite absolute URLs on the fly. This makes creating test scripts
  for sites that use absolute URL's much less painful. The solution
  includes a new way of running the sniffer by defining it as a proxy
  to the browser. Paddy promises to document all of this RSN.

  Several bug fixes including:
   - Don't spin uselessly when not reporting to the console.
   - Don't broadcast needless cruft in the statistics report messages.
     (read: your network will no longer creak, this explains the need
      to up the buffer in 2.5).
   - Log directory is no longer mandatory.


Grinder 2.5
-----------

  The HTTP plugin now supports "string beans". These allow URL's and
  POST data to be easily parameterised.

  I've up'ed the read buffer size to 64K to allow more test statistics
  to be sent in a single multicast message. If this is too low you'll get
  exceptions - either null pointer exceptions in the Receiver or
  "can't bind to socket" exceptions in the Sender code. If any one is
  still running into problems, please mail
  grinder-use@lists.sourceforge.net.

  JRun friendly patch from Stuart Tily.

  Better socket handling for TCPSniffer from Phillip Burgess.


Grinder 2.4
-----------

  The console UI has been slightly tidied up. Graphs are now
  histograms.

  The JUnit plugin should work again. It also has a new parameter
  (logStackTraces) and improved logging.

  You can now specify an explicit properties file to both the Grinder
  and the Console as the first argument. For example:

	java net.grinder.Grinder myproperties

  Credit to Marc Stogner for this idea and initial implementaion.

  (More version musings: The last version was _meant_ to named be 2.4,
  not 2.3.2. According to my schem, increments the third number is
  meant to be reserved for bug fix releases only. The new console
  funtionallity really deserves something more significant. Rather
  than rewriting history, I'm treating 2.3.2 as a "beta" of the
  console functionality, and upping the second number here.)


Grinder 2.3.2
-------------

  A shiny new console, with true TPS measurement.

  New communciations layer.


Grinder 2.3.1
-------------

  Even more bug fixes to the HTTP plugin. The cookie handling has been
  reworked to more accurately reflect RFC 2109. Multiple cookies
  should now work, with the exception that only one Set-Cookie header
  is recognised per request. This is a limitation of the
  java.net.HttpURLConnection class, which I will rant about at length
  to anyone who asks.

  The HTTP plugin parameter 'grinder.plugin.parameter.keepSession' has
  been renamed to 'grinder.plugin.parameter.useCookies'.

  The Grinder now has a logo, courtesy of Richard Wallace.


Grinder 2.3
-----------

  A HTTP plugin bug fix release. See the ChangeLog for details.


Grinder 2.2
-----------

  The promised JUnit plugin is here! See README for more information.

  I've introduced the concept of a TestSetPlugin that defines the set
  of tests to perform. This is primarily to support the JUnit plugin.

  Bug fix to SSLSnifferEngine from Paddy Spencer. (You're first name
  doesn't _have_ to begin with 'P' to get into AUTHORS, but it helps
  :-)).

  More tweaks to the logging and terminal output.

  The Console _should_ work again. Can't verify this as multicast is
  currently not working on my machine.


Grinder 2.1
-----------

  The plugin interface now has a single "doTest" dispatch interface
  instead of using reflection. This simplifies the writing of generic
  plugins. The "grinder.methods" property has been removed. Instead
  tests are specified by a number of "grinder.testX" properties (where
  test is any number). See README for details.

  [Support for testing classes using reflection will be provided by a
  JUnit plugin which will come in 2.2].

  The "initial sleep time" has been removed, a "begin cycle sleep
  time" has been added in its place. Individual method sleep times can
  now be specified. All sleep times are now randomly varied according
  to a Normal distribution. See README for details.

  The HttpPlugin now supports an "ifModifiedSince" parameter. This
  translates to the HTTP "If-Modified-Since" request header. This
  allows the grinder to simulate the mechanism browsers use to check
  for cached pages.

  The HttpPluginSnifferFilter has been updated to record sleep times,
  If-Modified-Since headers, and reflect the property format changes.

  The logging of the HTTP plugin has been improved.

  The output and error log format is now more useful. There was no
  point in displaying the host and process for each line (each process
  gets its own output file). I've added the current cycle and test
  number instead.

  I've removed the "simple" and "ejb" plugins as they are not useful
  in their own right and I got fed up of maintaining them. Both would
  be best addressed using the planned JUnit plugin. Examples will come
  with Grinder 2.2.

  We have our first JUnit test case. We need more.

  The TCPSniffer is now silent about SocketExceptions.

  Renamed "GrinderContext" to more correct "PluginContext". Renamed
  "method" to "test" throughout.


Grinder 2.0
-----------

  "Huh - what happened to the version numbers?": This release of the
  Grinder should be published on http://developer.bea.com/ and its
  logically a "1.0" release. However, Paco's original was released as
  1.6 and I don't want to confuse the public too much as to the latest
  and greatest.


  New TCPSniffer - the SnifferServlets are dead! (Big thanks to Phil
  Dawes for the sweat behind this).


  The HTTP plugin now automatically follows redirects only if you
  set the property

	grinder.plugin.parameter.followRedirects=true

  See the README file for details.


  The build auto-detects what modules to build by checking your
  classpath for classes the module depends on. You may have to unset
  your classpath if this doesn't do what you want. Currently the
  conditionally built modules are:

   HTTP SSL plugin (Needs the JSSE)
   TCPSniffer SSL engine (Needs the JSSE)
   TCPSniffer HTTP plugin filter (Needs Apache Jakarta Regexp)
   WebLogic Server 5.1 Trader EJB plugin (needs WLS Trader EJB)


  Fixed a bug that caused the thread ID to be displayed incorrectly.


  I've added a wrapper class for the Console to the net.grinder
  package. You should now use "java net.grinder.Console" instead of
  "java net.grinder.console.Console". All future "main" classes will
  belong to this package.


Grinder 0.9
-----------

  I've finally got rid of PropsLoader. This entails a few changes to
  properties:

    grinder.jvm.path	-	Specifies the java executable used for
				the child JVMs. Defaults to "java" so
				you do not need to specify this if
				your path is sensible.

    grinder.jvm.classpath -	Use to adjust the classpath used for
				the child VMs. Anything specified here
				will be prepended to the classpath
				used to start the grinder itself.

    grinder.jvm.arguments -	Additional arguments to child JVM's.


  Additionally, grinder.properties does not have to be in your
  classpath anymore. (I know I said this before - I mean it this
  time).

  PeterZ found the data file title line useful so I've reinstated it.

  I'm now using Ant 1.2 as the build engine, and have decided to
  remove Ant from the distrubution. See the build.xml file for more
  information.


Grinder 0.8
-----------

  HTTPS support from Phil Dawes.

  HTTP 302/307 handling from Phil Dawes.
