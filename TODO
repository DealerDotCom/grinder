[If anyone wants to pick something of this wish list, I prefer unified
diff patches. Mail them to grinder-development@lists.sourceforge.net.
The wish list is part of the distribution, I'll accept patches against
it too :-). The list is roughly in priority order.]

Fix "quick and dirty hack" in ProcessContext.

PluginProcessContext - should through GE's at the plugin.

When HTTPTest etc know about the plugin, where do the lifecycle (begin
run etc) callbacks go? To all known plugins? Split script into
declaration and usage?

Make ProcessContext a singleton?

Sender to be an active object.

BSFInvokeableTest functionality to move to HTTPTest. Remove onus of
registering test from script.

Abstract out a TestScheduler interface to allow other algorithms. Add
a "random order" algorithm, which might work well with the JUnit
plugin. Flesh out the API so custom script schedulers can be
supported.

Use the console to broadcast scripts to grinder processes. XML
containing embedded script.



  TCPSniffer/HTTPPlugin bug when recording large outputs with posts?

  Update HTTPClient to support "mean time to first byte".

  Write more JUnit tests.

  Find out how to stop net.grinder.console.swing.TestGraph from
  preventing parent process from detecting exit status. (For example,
  when used with the JUnit plugin). Surely System.exit() is not the
  answer?

  Get the communications tests and the swing tests running under the
  JUnit plugin.

  Add an assertion for the expected status code to the HTTP plugin.
  HTTP Plugin "not ok".

  TCPSniffer enhancements: proxying works on a per-protocol basis, so
  write some plugins for the proxy to handle different protocols, and
  integrate it more fully into the TCPSniffer

  Measure test variance. This would involve the console broadcasting
  the total mean, and then listening for the reported variance.

  Minor fixes to build.xml:
	Fix the permissions in the distribution files.
	
  Minor fixes to HttpPluginSnifferFilter:
	Respect charset information.
	Sanity check the processing against RFC 2616

  Efficiency: TestStatisticsMap.getDelta() to be able to reuse delta
  object.
