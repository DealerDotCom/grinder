<?xml version="1.0" encoding="UTF-8"?>

<xs:schema
  targetNamespace="http://grinder.sourceforge.net/tcpproxy/http/1.0"
  xmlns:tns="http://grinder.sourceforge.net/tcpproxy/http/1.0"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  attributeFormDefault="unqualified" elementFormDefault="qualified">

  <xs:element name="http-recording" type="tns:HTTPRecordingType">
    <xs:key name="RequestID">
      <xs:selector xpath="page/request" />
      <xs:field xpath="request-id" />
    </xs:key>

    <xs:key name="PageID">
      <xs:selector xpath="page" />
      <xs:field xpath="page-id" />
    </xs:key>

    <xs:key name="BaseURIID">
      <xs:selector xpath="base-uri" />
      <xs:field xpath="uri-id" />
    </xs:key>

    <xs:key name="CommonHeadersID">
      <xs:selector xpath="common-headers" />
      <xs:field xpath="headers-id" />
    </xs:key>

    <xs:key name="TokenID">
      <xs:selector xpath="page/request/response/parsed-token" />
      <xs:field xpath="token-id" />
    </xs:key>

    <xs:keyref name="BaseURIIDRef" refer="tns:BaseURIID">
      <xs:selector xpath="page/request/uri" />
      <xs:field xpath="extends" />
    </xs:keyref>

    <xs:keyref name="CommonHeadersIDRef" refer="tns:CommonHeadersID">
      <xs:selector xpath="page/request/headers" />
      <xs:field xpath="extends" />
    </xs:keyref>

    <xs:key name="TokenIDRef">
      <xs:selector xpath="page/request/uri/parsed/token-parameter" />
      <xs:field xpath="token-id" />
    </xs:key>
  </xs:element>

  <xs:simpleType name="IDType">
    <xs:restriction base="xs:NMTOKEN" />
  </xs:simpleType>

  <xs:complexType name="HTTPRecordingType">
    <xs:sequence>
      <xs:element name="metadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="version" type="xs:normalizedString" />
            <xs:element name="time" type="xs:dateTime" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="common-headers" type="tns:CommonHeadersType"
        minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="base-uri" type="tns:BaseURIType"
        minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="page" type="tns:PageType"
        minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="BaseURIType">
    <!-- Scheme and conventional server authority. No support for userinfo. -->
    <xs:sequence>
      <xs:element name="scheme">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="http" />
            <xs:enumeration value="https" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="host" type="xs:NMTOKEN" />
      <xs:element name="port" type="xs:unsignedShort" />
    </xs:sequence>
    <xs:attribute name="uri-id" type="tns:IDType" />
  </xs:complexType>

  <xs:complexType name="PageType">
    <xs:sequence>
      <xs:element name="request" type="tns:RequestType"
        minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="page-id" type="tns:IDType" />
  </xs:complexType>

  <xs:complexType name="ParsedTokenType">
    <xs:sequence>
      <xs:choice>
        <!-- Might have different token types in the future. -->
        <xs:element name="name-value" type="tns:NameValueType" />
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="token-id" type="tns:IDType" />
    <xs:attribute name="source">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="LOCATION_HEADER_PATH_PARAMETER" />
          <xs:enumeration value="LOCATION_HEADER_QUERY_STRING" />
          <xs:enumeration value="BODY_URI_PATH_PARAMETER" />
          <xs:enumeration value="BODY_URI_QUERY_STRING" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="token" type="tns:ParsedTokenType"
        minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="status-code" type="xs:unsignedShort" />
    <xs:attribute name="reason-phrase" type="xs:normalizedString" />
  </xs:complexType>

  <xs:complexType name="RequestType">
    <xs:sequence>
      <xs:element name="time" type="xs:dateTime" />
      <xs:element name="method">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="DELETE" />
            <xs:enumeration value="GET" />
            <xs:enumeration value="HEAD" />
            <xs:enumeration value="OPTIONS" />
            <xs:enumeration value="POST" />
            <xs:enumeration value="PUT" />
            <xs:enumeration value="TRACE" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="uri" type="tns:RelativeURIType" />
      <xs:element name="headers" type="tns:HeadersType" />
      <xs:element name="description" type="xs:normalizedString" />
      <xs:element name="sleep-time" type="xs:unsignedInt" minOccurs="0" />
      <xs:element name="body" type="tns:BodyType" minOccurs="0" />
      <xs:element name="response" type="tns:ResponseType" />
    </xs:sequence>
    <xs:attribute name="request-id" type="tns:IDType" />
  </xs:complexType>

  <xs:complexType name="TokenReferenceType">
    <xs:attribute name="token-id" type="tns:IDType" />
  </xs:complexType>

  <xs:complexType name="ParsedURIPathType">
    <xs:sequence maxOccurs="unbounded">

      <!-- Segment text includes leading '/', if any. -->
      <xs:element name="segment" type="xs:normalizedString" />

      <!-- Parameters don't include leading ';'. -->
      <xs:choice minOccurs="0">
        <xs:element name="literal-parameter" type="xs:normalizedString"/>
        <xs:element name="token-parameter" type="tns:TokenReferenceType"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="RelativeURIType">
    <xs:sequence>
      <xs:choice>
        <xs:element name="unparsed" type="xs:normalizedString" />
        <xs:element name="parsed" type="tns:ParsedURIPathType" />
      </xs:choice>
      <xs:element name="query-string" type="tns:QueryStringType"
        minOccurs="0" />
    </xs:sequence>

    <xs:attribute name="extends" type="tns:IDType" />
  </xs:complexType>

  <xs:complexType name="QueryStringType">
    <xs:choice>
      <xs:element name="unparsed" type="xs:normalizedString" />
      <xs:element name="parsed" type="tns:ParsedQueryStringType" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="ParsedQueryStringType">
    <xs:sequence>
      <xs:element name="parameter" type="tns:ParameterType"
        minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ParameterType">
    <xs:complexContent>
      <xs:extension base="tns:NameValueType" />
    </xs:complexContent>
  </xs:complexType>

    <xs:complexType name="HeadersType">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element name="header" type="tns:HeaderType" />
        <xs:element name="authorization" type="tns:AuthorizationHeaderType" />
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="extends" type="tns:IDType" use="optional" />
  </xs:complexType>

  <xs:complexType name="CommonHeadersType">
    <xs:complexContent>
      <xs:extension base="tns:HeadersType">
        <xs:attribute name="headers-id" type="tns:IDType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="HeaderType">
    <xs:complexContent>
      <xs:extension base="tns:NameValueType" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AuthorizationHeaderType">
    <xs:sequence>
      <xs:element name="basic" type="tns:BasicAuthorizationHeaderType" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="BasicAuthorizationHeaderType">
    <xs:attribute name="userid">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[^:]*" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="password" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="BodyType">
    <xs:sequence>
      <xs:element name="content-type" type="xs:normalizedString"
        minOccurs="0" />
      <xs:choice>
        <xs:element name="binary" type="tns:BinaryBodyType" />
        <xs:element name="file" type="tns:FileNameBodyType" />
        <xs:element name="form" type="tns:FormBodyType" />
        <xs:element name="string" type="tns:StringBodyType" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="BinaryBodyType">
    <xs:restriction base="xs:base64Binary" />
  </xs:simpleType>

  <xs:simpleType name="FileNameBodyType">
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:complexType name="FormBodyType">
    <xs:sequence>
      <xs:element name="form-field" type="tns:FormFieldType"
        minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormFieldType">
    <xs:complexContent>
      <xs:extension base="tns:NameValueType" />
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="StringBodyType">
    <xs:restriction base="xs:string">
      <xs:whiteSpace value="preserve" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="NameValueType" abstract="true">
    <xs:attribute name="name" type="xs:NMTOKEN" />
    <xs:attribute name="value" type="xs:string" />
  </xs:complexType>
</xs:schema>
